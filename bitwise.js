//************************************************************************************************
// Bitwise Operators
//************************************************************************************************
// Operator	Description              	Example	Same	    Result	Decimal
// &	AND	       5 & 1	            0101 & 0001	        0001	  1
// |	OR	       5 | 1	            0101 | 0001	        0101	   5
// ~	NOT	       ~ 5	                ~0101	            1010      10
// ^	XOR	       5 ^ 1	            0101 ^ 0001	0100	 4
// <<	Zero        fill left shift	    5 << 1	0101 << 1	1010	 10
// >>	Signed        right shift	    5 >> 1	0101 >> 1	0010	  2
// >>>	Zero        fill right shift	5 >>> 1	0101 >>> 1	0010	  2
//************************************************************************************************

//************************************************************************************************
// BITWISE AND
//************************************************************************************************

var a = 10;
var b = 5;
console.log("BITWISE AND "+a+" and "+b+" -> " ,a&b);
console.log("BITWISE AND "+a+" and "+a+" -> " ,a&a);

//************************************************************************************************
// BITWISE OR
//************************************************************************************************

var a = 10;
var b = 5;
console.log("BITWISE OR "+a+" and "+b+" -> " ,a|b);

//************************************************************************************************
// BITWISE NOT
//************************************************************************************************

var a = 10;
var b = 5;
console.log("BITWISE NOT "+a+" and "+b+" -> " ,~a);

//************************************************************************************************
// BITWISE XOR
//************************************************************************************************

var a = 10;
var b = 5;
console.log("BITWISE XOR "+a+" and "+b+" -> " ,a^b);

//************************************************************************************************
// BITWISE ZERO fill left shift	
//************************************************************************************************

var a = 10;
var b = 5;
console.log("BITWISE left shift "+a+" and "+b+" -> " ,a<<b);

//************************************************************************************************
// BITWISE SIGNED right shift
//************************************************************************************************

var a = 10;
var b = 5;
console.log("BITWISE right shift"+a+" and "+b+" -> " ,a>>b);

//************************************************************************************************
// BITWISE ZERO fill right shift
//************************************************************************************************

var a = 10;
var b = 5;
console.log("BITWISE right shift"+a+" and "+b+" -> " ,a>>>b);
